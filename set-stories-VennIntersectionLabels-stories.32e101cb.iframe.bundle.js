"use strict";(self.webpackChunkchsk=self.webpackChunkchsk||[]).push([[4151],{"./packages/set/stories/VennIntersectionLabels.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomFormat:()=>CustomFormat,OneSet:()=>OneSet,ProportionalAreas:()=>ProportionalAreas,ProportionalDisjoint:()=>ProportionalDisjoint,Styled:()=>Styled,Subsets:()=>Subsets,ThreeSets:()=>ThreeSets,TwoSets:()=>TwoSets,__namedExportsOrder:()=>__namedExportsOrder,default:()=>VennIntersectionLabels_stories});var react=__webpack_require__("./node_modules/react/index.js"),chsk_core_es=__webpack_require__("./packages/core/dist/chsk-core.es.js"),predicates=__webpack_require__("./packages/set/src/venn/predicates.ts"),contexts=__webpack_require__("./packages/set/src/venn/contexts.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var VennIntersectionLabels=function VennIntersectionLabels(_ref){var ids=_ref.ids,_ref$format=_ref.format,format=void 0===_ref$format?function(v){return String(v)}:_ref$format,_ref$padding=_ref.padding,padding=void 0===_ref$padding?[4,4,4,4]:_ref$padding,_ref$size=_ref.size,size=void 0===_ref$size?[40,10]:_ref$size,_ref$anchor=_ref.anchor,anchor=void 0===_ref$anchor?[.5,.5]:_ref$anchor,_ref$align=_ref.align,align=void 0===_ref$align?[.5,.5]:_ref$align,_ref$offset=_ref.offset,offset=void 0===_ref$offset?[0,0]:_ref$offset,className=_ref.className,_ref$setRole=_ref.setRole,setRole=void 0!==_ref$setRole&&_ref$setRole,style=_ref.style,_ref$component=_ref.component,component=void 0===_ref$component?chsk_core_es.JU7:_ref$component,componentProps=_ref.componentProps,preparedData=(0,contexts.En)(),data=preparedData.data;if(!(0,predicates.xC)(data))return null;var idSet=new Set(null!=ids?ids:preparedData.data.map((function(item){return item.id}))),commonProps=_extends({},componentProps,{size,anchor,align,offset,padding,style,setRole,className:(0,chsk_core_es.uBT)("vennIntersectionLabel",className)}),result=data.map((function(item,i){return idSet.has(item.id)?(0,react.createElement)(component,_extends({key:"l-"+i},commonProps,{position:item.labelPosition}),format(item.value,item)):null})).filter(Boolean);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:result})};try{VennIntersectionLabels.displayName="VennIntersectionLabels",VennIntersectionLabels.__docgenInfo={description:"",displayName:"VennIntersectionLabels",props:{format:{defaultValue:{value:"(v: number) => String(v)"},description:"format for label content",name:"format",required:!1,type:{name:"((v: number, item?: VennPreparedDataItem) => ReactNode)"}},component:{defaultValue:null,description:"function used to draw individual components",name:"component",required:!1,type:{name:"FC<LabelProps>"}},setRole:{defaultValue:{value:"false"},description:"toggle role attribute in svg code",name:"setRole",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"class string",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"css style",name:"style",required:!1,type:{name:"Partial<CSSProperties>"}},offset:{defaultValue:{value:"[0, 0]"},description:"position offset added after anchoring and alignment",name:"offset",required:!1,type:{name:"NumericPositionSpec"}},padding:{defaultValue:{value:"[4, 4, 4, 4]"},description:"space between container and label",name:"padding",required:!1,type:{name:"FourSideSizeSpec"}},align:{defaultValue:{value:"[0.5, 0.5]"},description:"alignment of content within the bounding container",name:"align",required:!1,type:{name:"AlignSpec"}},size:{defaultValue:{value:"[40, 10]"},description:"size for label box",name:"size",required:!1,type:{name:"SizeSpec"}},ids:{defaultValue:null,description:"ids to display (defaults to all ids)",name:"ids",required:!1,type:{name:"string[]"}},componentProps:{defaultValue:null,description:"props passed to each component",name:"componentProps",required:!1,type:{name:"Partial<LabelProps>"}},anchor:{defaultValue:{value:"[0.5, 0.5]"},description:"position of anchor point relative to box size",name:"anchor",required:!1,type:{name:"AlignSpec"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/set/src/venn/VennIntersectionLabels.tsx#VennIntersectionLabels"]={docgenInfo:VennIntersectionLabels.__docgenInfo,name:"VennIntersectionLabels",path:"packages/set/src/venn/VennIntersectionLabels.tsx#VennIntersectionLabels"})}catch(__react_docgen_typescript_loader_error){}var decorators=__webpack_require__("./packages/set/stories/decorators.tsx");const VennIntersectionLabels_stories={title:"Addons/Set/VennIntersectionLabels",component:VennIntersectionLabels},OneSet={name:"one set",decorators:[decorators.Tw]},TwoSets={name:"two sets",decorators:[decorators.ED]},ThreeSets={name:"three sets",decorators:[decorators.hu]},ProportionalAreas={name:"proportional areas",decorators:[decorators.$l]},ProportionalDisjoint={name:"proportional disjoint",decorators:[decorators.FS]},CustomFormat={name:"custom format",args:{format:(v,item)=>"al"===item.label.substring(0,2)&&item.label.indexOf("!")>0?"cold":"! al"===item.label.substring(0,4)?"hot":"tepid"},decorators:[decorators.ED]},Subsets={name:"subsets",args:{ids:["gamma","alpha gamma","beta gamma","alpha beta gamma"]},decorators:[decorators.hu]},Styled={name:"styled",args:{style:{fontWeight:600,fontSize:24,fill:"#fff"},offset:[0,-20]},decorators:[decorators.ED]},__namedExportsOrder=["OneSet","TwoSets","ThreeSets","ProportionalAreas","ProportionalDisjoint","CustomFormat","Subsets","Styled"];OneSet.parameters={...OneSet.parameters,docs:{...OneSet.parameters?.docs,source:{originalSource:"{\n  name: 'one set',\n  decorators: [ChartVennSets1Decorator]\n}",...OneSet.parameters?.docs?.source}}},TwoSets.parameters={...TwoSets.parameters,docs:{...TwoSets.parameters?.docs,source:{originalSource:"{\n  name: 'two sets',\n  decorators: [ChartVennSets2Decorator]\n}",...TwoSets.parameters?.docs?.source}}},ThreeSets.parameters={...ThreeSets.parameters,docs:{...ThreeSets.parameters?.docs,source:{originalSource:"{\n  name: 'three sets',\n  decorators: [ChartVennSets3Decorator]\n}",...ThreeSets.parameters?.docs?.source}}},ProportionalAreas.parameters={...ProportionalAreas.parameters,docs:{...ProportionalAreas.parameters?.docs,source:{originalSource:"{\n  name: 'proportional areas',\n  decorators: [ChartVennSets2ProportionalDecorator]\n}",...ProportionalAreas.parameters?.docs?.source}}},ProportionalDisjoint.parameters={...ProportionalDisjoint.parameters,docs:{...ProportionalDisjoint.parameters?.docs,source:{originalSource:"{\n  name: 'proportional disjoint',\n  decorators: [ChartVennSets2ProportionalDisjointDecorator]\n}",...ProportionalDisjoint.parameters?.docs?.source}}},CustomFormat.parameters={...CustomFormat.parameters,docs:{...CustomFormat.parameters?.docs,source:{originalSource:"{\n  name: 'custom format',\n  args: {\n    format: (v: string | number, item: VennInteractiveDataItem) => {\n      if (item.label.substring(0, 2) === 'al' && item.label.indexOf('!') > 0) return 'cold';\n      if (item.label.substring(0, 4) === '! al') return 'hot';\n      return 'tepid';\n    }\n  },\n  decorators: [ChartVennSets2Decorator]\n}",...CustomFormat.parameters?.docs?.source}}},Subsets.parameters={...Subsets.parameters,docs:{...Subsets.parameters?.docs,source:{originalSource:"{\n  name: 'subsets',\n  args: {\n    ids: ['gamma', 'alpha gamma', 'beta gamma', 'alpha beta gamma']\n  },\n  decorators: [ChartVennSets3Decorator]\n}",...Subsets.parameters?.docs?.source}}},Styled.parameters={...Styled.parameters,docs:{...Styled.parameters?.docs,source:{originalSource:"{\n  name: 'styled',\n  args: {\n    style: {\n      fontWeight: 600,\n      fontSize: 24,\n      fill: '#fff'\n    },\n    offset: [0, -20]\n  },\n  decorators: [ChartVennSets2Decorator]\n}",...Styled.parameters?.docs?.source}}}}}]);